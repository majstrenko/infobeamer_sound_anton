#!/usr/bin/python2.7
from hosted import device, node, config, time, threading
config.restart_on_update()

device.gpio.monitor(config.pin_16)
device.gpio.monitor(config.pin_17)
device.gpio.monitor(config.pin_18)
device.gpio.monitor(config.pin_19)
device.gpio.monitor(config.pin_20) #pridané
device.gpio.monitor(config.pin_21) #pridané


def handle_pin(pin, state):
    if state == 1:
        print("pin {} touched".format(pin))
        node.send('/state/%d:1' % pin)
        #time.sleep(5)  # Adjust the sleep time as needed
        #node.send('/state/%d:0' % pin)
        #print("pin {} touched state 0".format(pin))

def gpio_poll_loop():
    for pin, state in device.gpio.poll_forever():
        if pin in [16, 17, 18, 19, 20, 21]: #pridané (20,21)
            threading.Thread(target=handle_pin, args=(pin, state)).start()

# Start the GPIO polling loop in a separate thread
gpio_poll_thread = threading.Thread(target=gpio_poll_loop)
gpio_poll_thread.start()
